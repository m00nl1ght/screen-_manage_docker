version: '3'

networks:
  screen_network:
    name: "screen_network"
    driver: bridge

services:
  nginx_proxy:
    image: nginx:stable-alpine
    container_name: nginx_proxy
    ports:
      - "${NGINX_PORT_SERVER}:80"
      - "${NGINX_PORT_CLIENT}:81"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - backend_server
      - mysql_server
      - backend_client
      - mysql_client
    environment:
      TZ: ${WORKSPACE_TIMEZONE}
    networks:
      - screen_network

  mysql_server:
    image: mysql:8.0.21
    command: --default-authentication-plugin=mysql_native_password --skip_name_resolve
    container_name: mysql_server
    restart: unless-stopped
    volumes:
      - ./server_machine/mysql/data:/var/lib/mysql
      - ./server_machine/mysql/conf.d:/etc/mysql/conf.d
      - ./server_machine/mysql/logs:/var/log/mysql/
      - ./server_machine/mysql/dump:/dump
    ports:
      - "${MYSQL_SERVER_PORT}:3306"
    security_opt:
      - seccomp:unconfined
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: ${WORKSPACE_TIMEZONE}
    networks:
      - screen_network

  mysql_client:
    image: mysql:8.0.21
    command: --default-authentication-plugin=mysql_native_password --skip_name_resolve
    container_name: mysql_client
    restart: unless-stopped
    volumes:
      - ./client_machine/mysql/data:/var/lib/mysql
      - ./client_machine/mysql/conf.d:/etc/mysql/conf.d
      - ./client_machine/mysql/logs:/var/log/mysql/
      - ./client_machine/mysql/dump:/dump
    ports:
      - "${MYSQL_CLIENT_PORT}:3306"
    security_opt:
      - seccomp:unconfined
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: ${WORKSPACE_TIMEZONE}
    networks:
      - screen_network

  backend_server:
    container_name: backend_server
    build:
      context: ./server_machine/backend
      dockerfile: Dockerfile
      args:
        DOCKER_PHP_VERSION: '7.4'
        DOCKER_PHP_ENABLE_XDEBUG: ${DOCKER_PHP_ENABLE_XDEBUG}
        TZ: ${WORKSPACE_TIMEZONE}
        user: sammy
        uid: 1000
    working_dir: /var/www/html
    volumes:
      - ./server_machine/backend:/var/www
      - ./server_machine/php-ini/7.4/php.ini:/usr/local/etc/php/php.ini
    ports:
      - "${PHP_BACKEND_SERVER_PORT}:8000"
    networks:
      - screen_network

  backend_client:
    container_name: backend_clien
    build:
      context: ./client_machine/backend
      dockerfile: Dockerfile
      args:
        DOCKER_PHP_VERSION: '7.4'
        DOCKER_PHP_ENABLE_XDEBUG: ${DOCKER_PHP_ENABLE_XDEBUG}
        TZ: ${WORKSPACE_TIMEZONE}
        user: sammy
        uid: 1000
    working_dir: /var/www/html
    volumes:
      - ./client_machine/backend:/var/www
      - ./client_machine/php-ini/7.4/php.ini:/usr/local/etc/php/php.ini
    ports:
      - "${PHP_BACKEND_CLIENT_PORT}:8000"
    networks:
      - screen_network

  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin
  #   container_name: php_my_admin
  #   links:
  #     - mysql_client
  #   environment:
  #     PMA_HOST: mysql_client
  #     PMA_PORT: 3306
  #     PMA_ARBITRARY: 1
  #     PMA_USER: root
  #     PMA_PASSWORD: secret
  #   ports:
  #     - "8081:80"
  #   networks:
  #     - screen_network
  
  # frontend:
  #   container_name: frontend
  #   build: 
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - "./frontend:/app"
  #   ports:
  #     - "${FRONTEND_PORT}:8080"
  #   networks:
  #     - screen_network
  #   tty: true


 